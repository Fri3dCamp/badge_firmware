name: Build Release Image
on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: Tag to build for
  push:
    tags:
      - '*'

jobs:
  prepare:
    name: Select the tag to build for and create Draft release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Set tag
        id: tag
        run: |
          if [[ "${{ github.event_name }}" != "push" ]]; then
            tag="${{ github.event.inputs.tag }}"
          else
            tag=$(basename "${{ github.ref }}")
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Create GitHub Draft Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          tag="${{ steps.tag.outputs.tag }}"
          body="Pre-release for @${{ steps.tag.outputs.tag }}"
          gh release create --draft "$tag" --title "$tag-pre" --notes "$body"

  build_fox:
    needs: [prepare]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.prepare.outputs.tag }}
          submodules: 'recursive'
      - name: Load versions
        run: cat boards/fox/images.env >> ${GITHUB_ENV}
      - name: Build main firmware
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.2.2
          target: esp32s3
          path: 'boards/fox'
      - name: Prepare images
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          cd boards/fox/build
          sudo chown -R $(whoami) .
          mv bootloader/bootloader.bin bootloader_fox.bin
          mv nvs.bin nvs_fox.bin
          mv ota_data_initial.bin ota_data_fox.bin
          mv partition_table/partition-table.bin partition_table_fox.bin
          gh release download v${MICROPYTHON_VERSION} -R Fri3dCamp/badge_2024_micropython
          gh release download v${RETRO_GO_VERSION} -R Fri3dCamp/badge_retro-go
      - name: Build full images
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.2.2
          target: esp32s3
          path: 'boards/fox/build'
          command: zip -j full_webflasher_fox.zip ../flash_args *fox.bin && esptool.py $(sed "s/write_flash/merge_bin -o full_firmware_fox.img/g" ../flash_args | sed "s/ --baud 460800//g")
      - name: Upload binaries to draft release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          cd boards/fox/build
          gh release upload "${{ needs.prepare.outputs.tag }}" \
            "bootloader_fox.bin" \
            "nvs_fox.bin" \
            "ota_data_fox.bin" \
            "partition_table_fox.bin" \
            "fri3d_firmware_fox.bin" \
            "full_firmware_fox.img" \
            "full_webflasher_fox.zip"

  build_octopus:
    needs: [prepare]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.prepare.outputs.tag }}
          submodules: 'recursive'
      - name: Load versions
        run: cat boards/octopus/images.env >> ${GITHUB_ENV}
      - name: Build main firmware
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.2.2
          target: esp32
          path: 'boards/octopus'
      - name: Prepare images
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          cd boards/octopus/build
          sudo chown -R $(whoami) .
          mv bootloader/bootloader.bin bootloader_octopus.bin
          mv nvs.bin nvs_octopus.bin
          mv ota_data_initial.bin ota_data_octopus.bin
          mv partition_table/partition-table.bin partition_table_octopus.bin
          gh release download v${MICROPYTHON_VERSION} -R Fri3dCamp/badge_2024_micropython
      - name: Build full images
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.2.2
          target: esp32
          path: 'boards/octopus/build'
          command: zip -j full_webflasher_octopus.zip ../flash_args *octopus.bin && esptool.py $(sed "s/write_flash/merge_bin -o full_firmware_octopus.img/g" ../flash_args | sed "s/ --baud 460800//g")
      - name: Upload binaries to draft release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          cd boards/octopus/build
          gh release upload "${{ needs.prepare.outputs.tag }}" \
            "bootloader_octopus.bin" \
            "nvs_octopus.bin" \
            "ota_data_octopus.bin" \
            "partition_table_octopus.bin" \
            "fri3d_firmware_octopus.bin" \
            "full_firmware_octopus.img" \
            "full_webflasher_octopus.zip"
